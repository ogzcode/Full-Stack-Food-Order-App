// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  firstName  String    @default("")
  lastName   String    @default("")
  username   String
  password   String
  phone      String    @default("")
  orderCount Int       @default(0)
  role       String?   @default("user")
  address    String    @default("")
  orders     Order[]
  comments   Comment[]
  favorities Favorities[]
  createdAt  DateTime  @default(now())
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       String
  image       String
  createdAt   DateTime  @default(now())
  orders      Order[]
  comments    Comment[]
  favorities  Favorities[]
}

//Status: received, prepared, cargo, completed, cancelled
model Order {
  id         Int            @id @default(autoincrement())
  orderNo    String         @unique @default(uuid())
  totalPrice String
  status     String         @default("received")
  paymentType   String         @default("card")
  createdAt  DateTime       @default(now())
  userId     Int
  user       User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  products   Product[]
  details    OrderDetails[]
}

model OrderDetails {
  id        Int   @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  order     Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Comment {
  id        Int      @id @default(autoincrement())
  productId Int
  userId    Int
  content   String
  rating    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Favorities {
  id        Int      @id @default(autoincrement())
  productId Int
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}
